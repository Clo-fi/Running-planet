name: RunningPlanet Client CI / CD

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Deploy dist to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
          source_dir: 'dist'
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: "dist"

      - name: ðŸ“¦ Zip project files
        run: zip -r ./$GITHUB_SHA.zip .
        
      - name: ðŸŒŽ Access to AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
          
      - name: ðŸš› Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}/production/$GITHUB_SHA.zip

      - name: ðŸš€ Deploy to EC2 with CodeDeploy
        run: aws deploy create-deployment
          --application-name Runple
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name runple
          --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},bundleType=zip,key=production/$GITHUB_SHA.zip
          
      # - name: Deploy to EC2
      #   run: |
      #     set -x
      #     aws deploy create-deployment \
      #       --application-name Runple \
      #       --deployment-config-name CodeDeployDefault.AllAtOnce \
      #       --deployment-group-name runple \
      #       --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},key=build-fe.zip,bundleType=zip
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
